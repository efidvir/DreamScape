# docker-compose.yml
version: '3.8'

services:
  frontend:
    build: ./content
    ports:
      - "80:80"
    volumes:
      - ./generated_media:/app/static/media:rw
    networks:
      - mynetwork
    depends_on:
      - init

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    volumes:
      - ./generated_media:/app/static/media:rw
    networks:
      - mynetwork
    environment:
      - MEDIA_GEN_URL=http://mediagen:9001
      - LLM_URL=http://container_llm:9000
    depends_on:
      - init

  mediagen:
    build:
      context: ./mediagen
      dockerfile: Dockerfile
    container_name: mediagen
    volumes:
      # Don't mount the entire app directory
      - ./model_cache:/app/model_cache:rw
      - ./generated_media:/app/generated_media:rw
      - ./static/media:/app/static/media:rw
    ports:
      - "9001:9001"  # Application API
      - "8786:8786"  # Dask scheduler - important to expose this to allow remote workers to connect
      - "8787:8787"  # Dask dashboard
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - MODEL_CACHE_DIR=/app/model_cache
      - OUTPUT_DIR=/app/generated_media
      - DASK_SCHEDULER_PORT=8786
      - DASK_DASHBOARD_PORT=8787
      - REMOTE_WORKER_IP=10.100.102.27
    networks:
      - mynetwork
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - init

  container_llm:
    build: ./container_LLM
    ports:
      - "5002:9000"
    runtime: nvidia
    volumes:
      - ./model_cache:/model_cache:rw
    deploy:
      resources:
        limits:
          memory: 16G  
          cpus: '4'    
        reservations:
          memory: 8G
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - TRANSFORMERS_CACHE=/model_cache
      - HF_HOME=/model_cache
    networks:
      - mynetwork
    depends_on:
      - init

  init:
    image: alpine
    command: >
      sh -c "mkdir -p /data/generated_media /data/model_cache /data/static/media && 
             chmod -R 777 /data/generated_media /data/model_cache /data/static/media && 
             echo 'Directories initialized with proper permissions'"
    volumes:
      - ./:/data
    restart: "no"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  model_cache:
  generated_media: